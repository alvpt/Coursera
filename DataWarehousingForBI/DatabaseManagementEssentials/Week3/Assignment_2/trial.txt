SELECT STATEMENT PROBLEMS

1. For event requests, list the event number, event date (eventrequest.dateheld), and count of the
event plans. Only include event requests in the result if the event request has more than one
related event plan with a work date in December 2018

SELECT 
	EventRequest.eventno
	EventRequest.datereq
	COUNT(EventPlan.planno)	
FROM
	EventRequest
INNER JOIN
	EventPlan
ON 
	EventRequest.eventno = EventPlan.eventno


2. List the plan number, event number, work date, and activity of event plans meeting the
following two conditions: (1) the work date is in December 2018 and (2) the event is held in
the “Basketball arena”. Your query must not use the facility number (“F101”) of the
basketball arena in the WHERE clause. Instead, you should use a condition on the FacName
column for the value of “Basketball arena”.

SELECT
    	EventRequest.evntno,
    	EventRequest.dateheld,
    	EventRequest.status,
	EventRequest.estcost
FROM (((
	EventRequest
INNER JOIN
	EventPlan
ON
	EventRequest.evntno = EventPlan.evntno)
INNER JOIN
	Employee
ON
	EventPlan.empno = Employee.empno)
INNER JOIN
	Facility
ON
	EventRequest.facno = facility.facno)
WHERE
	Employee.empname = "Mary Manager" AND Facility.facname = "Basketball arena";




3. List the event number, event date, status, and estimated cost of events where there is an event
plan managed by Mary Manager and the event is held in the basketball arena in the period
October 1 to December 31, 2018. Your query must not use the facility number (“F101”) of
the basketball arena or the employee number (“E101”) of “Mary Manager” in the WHERE
clause. Thus, the WHERE clause should not have conditions involving the facility number or
employee number compared to constant values

SELECT 
	EventRequest.evntno,
	EventRequest.dateheld,
	EventRequest.status,
	EventRequest.estcost
FROM (((
	EventRequest
INNER JOIN
	EventPlan
ON 
	EventRequest.evntno = EventPlan.evntno)
INNER JOIN
	Employee
ON
	EventPlan.empno = Employee.empno)
INNER JOIN
	Facility
ON
	EventRequest.facno = facility.facno)
WHERE
	Employee.empname = "Mary Manager" AND Facility.facname = "Basketball arena";


DATABASE MODIFICATION PROBLEMS

4. List the plan number, line number, resource name, number of resources
(eventplanline.number), location name, time start, and time end where the event is held at the
basketball arena, the event plan has activity of activity of “Operation”, and the event plan has
a work date in the period October 1 to December 31, 2018. Your query must not use the facility number (“F101”) of the basketball arena in the WHERE clause. Instead, you should
use a condition on the FacName column for the value of “Basketball arena”.

SELECT
	EventPlanLine.planno,
	EventPlanLine.lineno,
	ResourceTbl.resname,
	EventPlanLine.numberfld,
	Location.locname,
	EventPlanLine.timestart,
	EventPlanLine.timeend
	
WHERE
	EventPlan.activity = "Operation" AND 
	



DATABASE MODIFICATION PROBLEMS
1. Insert a new row into the Facility table with facility name “Swimming Pool”.

INSERT INTO 
	Facility
VALUES
	("F104", “Swimming Pool”) 
	
2. Insert a new row in the Location table related to the Facility row in modification problem 1.
The new row should have “Door” for the location name.

INSERT INTO
	Location
VALUES
	("L107", "F104", "Door")
	

3. Insert a new row in the Location table related to the Facility row in modification problem 1.
The new row should have “Locker Room” for the location name.

INSERT INTO
	Facility
VALUES
	("F105", "Locker Room")

4. Change the location name of “Door” to “Gate” for the row inserted in modification problem
2. In MySQL, you need to place the UPDATE statement between two SET statements.

SET SQL_SAFE_UPDATES = 0;

UPDATE 
	Location
SET
	locname = "Gate"	
WHERE
	locno = "L107"
	
SET SQL_SAFE_UPDATES = 1;


5. Delete the row inserted in modification problem 3.

DELETE FROM
	Facility
WHERE
	facno = "F105"


SQL STATEMENTS WITH ERRORS AND POOR FORMATING

1. Identify errors in the following SQL statement and label errors with error type (syntax,
redundancy, or semantic). To simplify your work, the statement has only one type of
error. Rewrite the statement to remove the error.

SELECT 	DISTINCT
	eventrequest.evntno, 
	dateheld, 
	status,
	estcost
FROM 
	eventrequest, employee, facility, eventplan
WHERE 
	estaudience > 5000
AND 
	eventplan.empno = employee.empno
AND 
	eventrequest.facno = facility.facno
AND 
	facname = 'Football stadium'
AND 
	empname = 'Mary Manager';



2. Identify errors in the following SQL statement and label errors with error type (syntax,
redundancy, or semantic). To simplify your work, the statement has only one type of
error. Rewrite the statement to remove the error.

SELECT DISTINCT 
	eventrequest.evntno, 
	dateheld, 	
	status, 
	estcost
FROM 
	eventrequest, 
	eventplan
WHERE 
	estaudience > 4000
AND 	
	eventplan.evntno = eventrequest.evntno
GROUP BY 
	eventrequest.evntno, dateheld, status, estcost;



3. Identify errors in the following SQL statement and label errors with error type (syntax,
redundancy, or semantic). To simplify your work, the statement has only one type of
error. Rewrite the statement to remove the error.

SELECT DISTINCT 
	eventrequest.evntno, 
	dateheld, 
	status,
	estcost
FROM 
	eventrequest, 
	employee, 
	facility, 
	eventplan
WHERE 
	estaudience > 5000
AND 
	eventplan.empno = employee.empno
AND 
	eventrequest.facno = facility.facno
AND 
	facname = 'Football stadium';


4. Identify errors in the following SQL statement and label errors with error type (syntax,
redundancy, or semantic). To simplify your work, the statement has only one type of
error. Rewrite the statement to remove the errors.

SELECT DISTINCT 
	EventRequest.evntno, 
	dateheld, 
	status, 
	estcost
FROM 
	eventrequest, employee, eventplan
WHERE 
	estaudience BETWEEN 5000 AND 10000
AND
	eventplan.empno = employee.empno
AND 
	eventrequest.evntno = eventplan.evntno
AND 
	empname = 'Mary Manager';


5. Identify areas in which the SQL statement has poor coding practices and rewrite the
statement to improve the coding practices. You do not need to search for errors.

SELECT 
	eventplan.planno, lineno, resname,
	numberfld, timestart, timeend
FROM 
	eventrequest, facility, eventplan,
	eventplanline, resourcetbl
WHERE 
	estaudience = '1000'
AND 
	eventplan.planno = eventplanline.planno 
AND
	eventrequest.facno = facility.facno
AND 
	facname = 'Basketball arena' 
AND
	eventplanline.resno = resourcetbl.resno
AND 
	eventrequest.evntno = eventplan.evntno;


