example <- matrix(c(1,2,3,4,5,6,7,8), nrow = 4, ncol = 2)
source('~/.active-rstudio-document')
View(example)
View(example)
q()
q()
read.csv("hw1_data.csv")
x=2
read.csv("hw1_data.csv")
result = ((sum(my_vector)/length(my_vector))
}
(result)
}
}
}
##corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indcating
## the location of the CSV files
## 'threshold'is a numeric vector oflength 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations
## NOTE: Do not round the result
##}
v_cor = vector()
threshold =150
## 1º. Determinar los archivos que cumplen el treshold.
allfiles = complete(getwd(), id=1:332)
v = allfiles$nobs
v_th = which(v>=threshold)
print(v_th)
## 2º. Extraer de cada archivo las filas completas.
l = length(v_th)
v_th_for = 1:l
for(i in v_th_for){
#Create string of the file to be read.
if (v_th[i] <  10){
file = paste("00",v_th[i],".csv", sep = "")
} else if ((v_th[i] >=  10) & (v_th[i] <  100)){
file = paste("0",v_th[i],".csv", sep = "")
} else {
file = paste(v_th[i],".csv", sep = "")
}
monitor <- read.table(file, sep=",", header = T)#All the rows
compare_list = vector()
date <- monitor[["Date"]] #Column associated to the Data
date_good <- complete.cases(date)
sulfate <- monitor[["sulfate"]] #Column associated to the sulfate
sulfate_good <- complete.cases(sulfate) #Logic vector which determines Valid and Na values.
sulfate = sulfate[sulfate_good]
nitrate <- monitor[["nitrate"]] #Column associated to the nitrate
nitrate_good <- complete.cases(nitrate)
nitrate = nitrate[nitrate_good]
id_c <- monitor[["ID"]] #Column associated to the ID
id_good <- complete.cases(id_c)
k=0
l_monitor = length(date_good)
v_compare = vector()
for(j in 1:l_monitor){
if(date_good[j]==T && sulfate_good[j]==T && nitrate_good[j]==T && id_good[j]==T){
v_compare[j] = 1
}
else{
v_compare[j] = 0
}
}
w = which(v_compare==1)
## 3º. Crear dos vectores: 1 para sufate, y otro para nitrate
sulf = vector()
nitr = vector()
l_ns_for = length(sulfate)
for(n in 1:l_ns_for){
sulf=c(sulf,sulfate[n])
nitr=c(nitr,nitrate[n])
}
v_cor = c(v_cor,cor(sulf,nitr, method="pearson"))
}
print(v_cor)
## 4º. Añadir el resultado de la correlación a otro vector.
complete <- function(directory, id = 1:332){
## 'directory' is a character vector of length 1 incdicating
## the location of the CSV files
#'id' is an integer vector inicating the monitor ID numbers
#'## to be used
#'
#'## Return a dta frame of the form:
#'#id nobs
#'## 1 117
#'##2 1041
#'##...
#'##where 'id' is the ID number anf 'nob' is the
#'## numbe of complete cases
l = length(id)
id_for = 1:l
result_id = vector()
result_nobs = vector()
for(i in id_for){
#Create string of the file to be read.
if (id[i] <  10){
file = paste("00",id[i],".csv", sep = "")
} else if ((id[i] >=  10) & (id[i] <  100)){
file = paste("0",id[i],".csv", sep = "")
} else {
file = paste(id[i],".csv", sep = "")
}
monitor <- read.table(file, sep=",", header = T)#All the rows
compare_list = vector()
date <- monitor[["Date"]] #Column associated to the Data
date_good <- complete.cases(date)
sulfate <- monitor[["sulfate"]] #Column associated to the sulfate
sulfate_good <- complete.cases(sulfate) #Logic vector which determines Valid and Na values.
nitrate <- monitor[["nitrate"]] #Column associated to the nitrate
nitrate_good <- complete.cases(nitrate)
id_c <- monitor[["ID"]] #Column associated to the ID
id_good <- complete.cases(id_c)
k=0
l_monitor = length(date_good)
for(j in 1:l_monitor){
if(date_good[j]==T && sulfate_good[j]==T && nitrate_good[j]==T && id_good[j]==T){
k = k+1
}
}
result_id = c(result_id, i)
result_nobs = c(result_nobs, k)
}
result <- data.frame(id = result_id, nobs = result_nobs)
result
}
complete(getwd(), id=1:332)
setwd("~/CS/Coursera/RProgramming/W2/specdata")
complete(getwd(), id=1:332)
##corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indcating
## the location of the CSV files
## 'threshold'is a numeric vector oflength 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations
## NOTE: Do not round the result
##}
v_cor = vector()
threshold =150
## 1º. Determinar los archivos que cumplen el treshold.
allfiles = complete(getwd(), id=1:332)
v = allfiles$nobs
v_th = which(v>=threshold)
print(v_th)
## 2º. Extraer de cada archivo las filas completas.
l = length(v_th)
v_th_for = 1:l
for(i in v_th_for){
#Create string of the file to be read.
if (v_th[i] <  10){
file = paste("00",v_th[i],".csv", sep = "")
} else if ((v_th[i] >=  10) & (v_th[i] <  100)){
file = paste("0",v_th[i],".csv", sep = "")
} else {
file = paste(v_th[i],".csv", sep = "")
}
monitor <- read.table(file, sep=",", header = T)#All the rows
compare_list = vector()
date <- monitor[["Date"]] #Column associated to the Data
date_good <- complete.cases(date)
sulfate <- monitor[["sulfate"]] #Column associated to the sulfate
sulfate_good <- complete.cases(sulfate) #Logic vector which determines Valid and Na values.
sulfate = sulfate[sulfate_good]
nitrate <- monitor[["nitrate"]] #Column associated to the nitrate
nitrate_good <- complete.cases(nitrate)
nitrate = nitrate[nitrate_good]
id_c <- monitor[["ID"]] #Column associated to the ID
id_good <- complete.cases(id_c)
k=0
l_monitor = length(date_good)
v_compare = vector()
for(j in 1:l_monitor){
if(date_good[j]==T && sulfate_good[j]==T && nitrate_good[j]==T && id_good[j]==T){
v_compare[j] = 1
}
else{
v_compare[j] = 0
}
}
w = which(v_compare==1)
## 3º. Crear dos vectores: 1 para sufate, y otro para nitrate
sulf = vector()
nitr = vector()
l_ns_for = length(sulfate)
for(n in 1:l_ns_for){
sulf=c(sulf,sulfate[n])
nitr=c(nitr,nitrate[n])
}
v_cor = c(v_cor,cor(sulf,nitr, method="pearson"))
}
print(v_cor)
## 4º. Añadir el resultado de la correlación a otro vector.
##corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indcating
## the location of the CSV files
## 'threshold'is a numeric vector oflength 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations
## NOTE: Do not round the result
##}
v_cor = vector()
threshold =400
## 1º. Determinar los archivos que cumplen el treshold.
allfiles = complete(getwd(), id=1:332)
v = allfiles$nobs
v_th = which(v>=threshold)
print(v_th)
## 2º. Extraer de cada archivo las filas completas.
l = length(v_th)
v_th_for = 1:l
for(i in v_th_for){
#Create string of the file to be read.
if (v_th[i] <  10){
file = paste("00",v_th[i],".csv", sep = "")
} else if ((v_th[i] >=  10) & (v_th[i] <  100)){
file = paste("0",v_th[i],".csv", sep = "")
} else {
file = paste(v_th[i],".csv", sep = "")
}
monitor <- read.table(file, sep=",", header = T)#All the rows
compare_list = vector()
date <- monitor[["Date"]] #Column associated to the Data
date_good <- complete.cases(date)
sulfate <- monitor[["sulfate"]] #Column associated to the sulfate
sulfate_good <- complete.cases(sulfate) #Logic vector which determines Valid and Na values.
sulfate = sulfate[sulfate_good]
nitrate <- monitor[["nitrate"]] #Column associated to the nitrate
nitrate_good <- complete.cases(nitrate)
nitrate = nitrate[nitrate_good]
id_c <- monitor[["ID"]] #Column associated to the ID
id_good <- complete.cases(id_c)
k=0
l_monitor = length(date_good)
v_compare = vector()
for(j in 1:l_monitor){
if(date_good[j]==T && sulfate_good[j]==T && nitrate_good[j]==T && id_good[j]==T){
v_compare[j] = 1
}
else{
v_compare[j] = 0
}
}
w = which(v_compare==1)
## 3º. Crear dos vectores: 1 para sufate, y otro para nitrate
sulf = vector()
nitr = vector()
l_ns_for = length(sulfate)
for(n in 1:l_ns_for){
sulf=c(sulf,sulfate[n])
nitr=c(nitr,nitrate[n])
}
v_cor = c(v_cor,cor(sulf,nitr, method="pearson"))
}
print(v_cor)
## 4º. Añadir el resultado de la correlación a otro vector.
summary(v_cor)
##corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indcating
## the location of the CSV files
## 'threshold'is a numeric vector oflength 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations
## NOTE: Do not round the result
##}
v_cor = vector()
threshold =400
## 1º. Determinar los archivos que cumplen el treshold.
allfiles = complete(getwd(), id=1:2)
v = allfiles$nobs
v_th = which(v>=threshold)
print(v_th)
## 2º. Extraer de cada archivo las filas completas.
l = length(v_th)
v_th_for = 1:l
for(i in v_th_for){
#Create string of the file to be read.
if (v_th[i] <  10){
file = paste("00",v_th[i],".csv", sep = "")
} else if ((v_th[i] >=  10) & (v_th[i] <  100)){
file = paste("0",v_th[i],".csv", sep = "")
} else {
file = paste(v_th[i],".csv", sep = "")
}
monitor <- read.table(file, sep=",", header = T)#All the rows
compare_list = vector()
date <- monitor[["Date"]] #Column associated to the Data
date_good <- complete.cases(date)
sulfate <- monitor[["sulfate"]] #Column associated to the sulfate
sulfate_good <- complete.cases(sulfate) #Logic vector which determines Valid and Na values.
sulfate = sulfate[sulfate_good]
nitrate <- monitor[["nitrate"]] #Column associated to the nitrate
nitrate_good <- complete.cases(nitrate)
nitrate = nitrate[nitrate_good]
id_c <- monitor[["ID"]] #Column associated to the ID
id_good <- complete.cases(id_c)
k=0
l_monitor = length(date_good)
v_compare = vector()
for(j in 1:l_monitor){
if(date_good[j]==T && sulfate_good[j]==T && nitrate_good[j]==T && id_good[j]==T){
v_compare[j] = 1
}
else{
v_compare[j] = 0
}
}
w = which(v_compare==1)
## 3º. Crear dos vectores: 1 para sufate, y otro para nitrate
sulf = vector()
nitr = vector()
l_ns_for = length(sulfate)
for(n in 1:l_ns_for){
sulf=c(sulf,sulfate[n])
nitr=c(nitr,nitrate[n])
}
v_cor = c(v_cor,cor(sulf,nitr, method="pearson"))
my_data=cbind(sulf,nitr)
}
print(v_cor)
library("ggpubr")
ggscatter(my_data, x = "S", y = "N",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
## 4º. Añadir el resultado de la correlación a otro vector.
install.packages("ggpubr")
##corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indcating
## the location of the CSV files
## 'threshold'is a numeric vector oflength 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0.
## Return a numeric vector of correlations
## NOTE: Do not round the result
##}
v_cor = vector()
threshold =400
## 1º. Determinar los archivos que cumplen el treshold.
allfiles = complete(getwd(), id=1:2)
v = allfiles$nobs
v_th = which(v>=threshold)
print(v_th)
## 2º. Extraer de cada archivo las filas completas.
l = length(v_th)
v_th_for = 1:l
for(i in v_th_for){
#Create string of the file to be read.
if (v_th[i] <  10){
file = paste("00",v_th[i],".csv", sep = "")
} else if ((v_th[i] >=  10) & (v_th[i] <  100)){
file = paste("0",v_th[i],".csv", sep = "")
} else {
file = paste(v_th[i],".csv", sep = "")
}
monitor <- read.table(file, sep=",", header = T)#All the rows
compare_list = vector()
date <- monitor[["Date"]] #Column associated to the Data
date_good <- complete.cases(date)
sulfate <- monitor[["sulfate"]] #Column associated to the sulfate
sulfate_good <- complete.cases(sulfate) #Logic vector which determines Valid and Na values.
sulfate = sulfate[sulfate_good]
nitrate <- monitor[["nitrate"]] #Column associated to the nitrate
nitrate_good <- complete.cases(nitrate)
nitrate = nitrate[nitrate_good]
id_c <- monitor[["ID"]] #Column associated to the ID
id_good <- complete.cases(id_c)
k=0
l_monitor = length(date_good)
v_compare = vector()
for(j in 1:l_monitor){
if(date_good[j]==T && sulfate_good[j]==T && nitrate_good[j]==T && id_good[j]==T){
v_compare[j] = 1
}
else{
v_compare[j] = 0
}
}
w = which(v_compare==1)
## 3º. Crear dos vectores: 1 para sufate, y otro para nitrate
sulf = vector()
nitr = vector()
l_ns_for = length(sulfate)
for(n in 1:l_ns_for){
sulf=c(sulf,sulfate[n])
nitr=c(nitr,nitrate[n])
}
v_cor = c(v_cor,cor(sulf,nitr, method="pearson"))
my_data=cbind(sulf,nitr)
}
print(v_cor)
library("ggpubr")
ggscatter(my_data, x = "S", y = "N",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Miles/(US) gallon", ylab = "Weight (1000 lbs)")
## 4º. Añadir el resultado de la correlación a otro vector.
source('~/CS/Coursera/RProgramming/W2/specdata/AssignmentW2_Part3.R')
install.packages("ggpubr")
source('~/CS/Coursera/RProgramming/W2/specdata/AssignmentW2_Part3.R')
source('~/CS/Coursera/RProgramming/W2/specdata/AssignmentW2_Part3.R')
source('~/CS/Coursera/RProgramming/W2/specdata/AssignmentW2_Part3.R')
source('~/CS/Coursera/RProgramming/W2/specdata/AssignmentW2_Part3.R')
source('~/CS/Coursera/RProgramming/W2/specdata/AssignmentW2_Part2.R')
