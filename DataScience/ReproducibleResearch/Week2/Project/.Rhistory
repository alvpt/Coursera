knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reshape2)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("data\\activity.csv")
data_meanSteps <- na.omit(data)
numberSteps <- sum(data_meanSteps$steps)
numberSteps
hist(data_meanSteps$steps, main="Number of steps taken each day", xlab="Steps")
mean(data_meanSteps$steps)
median(data_meanSteps$steps)
data_timePlot <- dcast(data, date ~ interval , value.var = "steps")
data_timePlot <- lapply(data_timePlot[2:ncol(data_timePlot)], mean, na.rm=TRUE)
data_timePlot <- data.frame(data_timePlot)
data_timePlot <- t(data_timePlot)
data_timePlot <- data.frame(cbind(unique(data$interval), data_timePlot))
colnames(data_timePlot) <- c("interval", "steps")
ggplot(data=data_timePlot, aes(x=interval, y=steps)) + geom_line()
prueba <- data_timePlot
data_imputedNA = data_timePlot <- dcast(data, date ~ interval , value.var = "steps")
for (column in c(2:ncol(data_imputedNA)))
{
for (row in c(1:nrow(data_imputedNA)))
{
if( is.na(data_imputedNA[row, column]) ) {
data_imputedNA[row, column] = lapply(data_imputedNA[column], mean, na.rm = TRUE)
}
}
}
prueba <- melt(data_imputedNA)
prueba <- prueba[order(prueba$date),]
colnames(prueba) <- c("date", "interval", "steps")
prueba <- cbind(prueba$steps, prueba[1:2])
colnames(prueba) <- c("steps", "date", "interval")
prueba$day <- weekdays( as.Date(prueba$date, format = "%Y-%m-%d") )
for( row in c(1:nrow(prueba)) ){
if(prueba$day[row] %in% c("lunes","martes","miércoles","jueves", "viernes")){
prueba$day[row] = "weekday"
} else {
prueba$day[row] = "weekend"
}
}
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "weekday", "weekend")
ggplot(data=data_timePlot_week, aes(x=as.numeric(interval), y=as.numeric(weekday))) + geom_line()
ggplot(data=data_timePlot_week, aes(x=as.numeric(interval), y=as.numeric(weekend))) + geom_line()
p1 <- ggplot(data=data_timePlot_week, aes(x=as.numeric(interval), y=as.numeric(weekday))) + geom_line()
p2 <- ggplot(data=data_timePlot_week, aes(x=as.numeric(interval), y=as.numeric(weekend))) + geom_line()
p1 <- ggplot(data=data_timePlot_week, aes(x=as.numeric(interval), y=as.numeric(weekday))) + geom_line()
p2 <- ggplot(data=data_timePlot_week, aes(x=as.numeric(interval), y=as.numeric(weekend))) + geom_line()
grid.arrange(p1, p2, nrow = 1)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p1, p2, nrow = 2)
View(data_timePlot_week)
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "weekday", "weekend")
data_timePlot_week$interval <- as.numeric(interval)
data_timePlot_week$interval <- as.numeric(data_timePlot_week$interval)
data_timePlot_week$weekday <- as.numeric(data_timePlot_week$weekday)
data_timePlot_week$weekend <- as.numeric(data_timePlot_week$weekend)
p1 <- ggplot(data=data_timePlot_week, aes(x=interval, y=weekday)) + geom_line()
p2 <- ggplot(data=data_timePlot_week, aes(x=interval, y=weekend)) + geom_line()
grid.arrange(p1, p2, nrow = 2)
View(data_timePlot_week)
View(prueba)
prueba$day <- weekdays( as.Date(prueba$date, format = "%Y-%m-%d") )
for( row in c(1:nrow(prueba)) ){
if(prueba$day[row] %in% c("lunes","martes","miércoles","jueves", "viernes")){
prueba$day[row] = "weekday"
} else {
prueba$day[row] = "weekend"
}
}
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
View(data_timePlot_week)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "weekday", "weekend")
data_timePlot_week$interval <- as.numeric(data_timePlot_week$interval)
prueba$day <- weekdays( as.Date(prueba$date, format = "%Y-%m-%d") )
for( row in c(1:nrow(prueba)) ){
if(prueba$day[row] %in% c("lunes","martes","miércoles","jueves", "viernes")){
prueba$day[row] = "weekday"
} else {
prueba$day[row] = "weekend"
}
}
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "weekday", "weekend")
View(data_timePlot_week)
View(data_timePlot_week)
View(data_timePlot_week)
View(data_timePlot_week)
View(data_timePlot_week)
str(data_timePlot_week)
prueba$day <- weekdays( as.Date(prueba$date, format = "%Y-%m-%d") )
for( row in c(1:nrow(prueba)) ){
if(prueba$day[row] %in% c("lunes","martes","miércoles","jueves", "viernes")){
prueba$day[row] = "weekday"
} else {
prueba$day[row] = "weekend"
}
}
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "steps-weekday", "steps-weekend")
data_timePlot_week$interval <- unique(data$interval)
data_timePlot_week$steps-weekday <- as.numeric(data_timePlot_week$steps-weekday)
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "weekday", "weekend")
data_timePlot_week$interval <- unique(data$interval)
data_timePlot_week$weekday <- as.numeric(data_timePlot_week$weekday)
data_timePlot_week$weekend <- as.numeric(data_timePlot_week$weekend)
p1 <- ggplot(data=data_timePlot_week, aes(x=interval, y=steps-weekend)) + geom_line() + ggtitle("weekend")
p2 <- ggplot(data=data_timePlot_week, aes(x=interval, y=steps-weekday)) + geom_line() + ggtitle("weekday")
grid.arrange(p1, p2, nrow = 2)
prueba$day <- weekdays( as.Date(prueba$date, format = "%Y-%m-%d") )
for( row in c(1:nrow(prueba)) ){
if(prueba$day[row] %in% c("lunes","martes","miércoles","jueves", "viernes")){
prueba$day[row] = "weekday"
} else {
prueba$day[row] = "weekend"
}
}
data_timePlot_week <- dcast(prueba, day ~ interval , value.var = "steps", fun.aggregate = mean)
data_timePlot_week <- data.frame( t(data_timePlot_week) )
data_timePlot_week <- data_timePlot_week[2:nrow(data_timePlot_week),1:2]
data_timePlot_week <- cbind(unique(prueba$interval), data_timePlot_week)
colnames(data_timePlot_week) <- c("interval", "weekday", "weekend")
data_timePlot_week$interval <- unique(data$interval)
data_timePlot_week$weekday <- as.numeric(data_timePlot_week$weekday)
data_timePlot_week$weekend <- as.numeric(data_timePlot_week$weekend)
p1 <- ggplot(data=data_timePlot_week, aes(x=interval, y=steps-weekend)) + geom_line() + ggtitle("weekend")
p2 <- ggplot(data=data_timePlot_week, aes(x=interval, y=steps-weekday)) + geom_line() + ggtitle("weekday")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("data\\activity.csv")
data_meanSteps <- na.omit(data)
numberSteps <- sum(data_meanSteps$steps)
numberSteps
data_timePlot <- dcast(data, date ~ interval , value.var = "steps")
data_timePlot <- lapply(data_timePlot[2:ncol(data_timePlot)], mean, na.rm=TRUE)
data_timePlot <- data.frame(data_timePlot)
data_timePlot <- t(data_timePlot)
data_timePlot <- data.frame(cbind(unique(data$interval), data_timePlot))
colnames(data_timePlot) <- c("interval", "steps")
ggplot(data=data_timePlot, aes(x=interval, y=steps)) + geom_line()
data_timePlot[rev(order(data_timePlot$steps)),][1,1]
data_imputedNA = data_timePlot <- dcast(data, date ~ interval , value.var = "steps")
for (column in c(2:ncol(data_imputedNA)))
{
for (row in c(1:nrow(data_imputedNA)))
{
if( is.na(data_imputedNA[row, column]) ) {
data_imputedNA[row, column] = lapply(data_imputedNA[column], mean, na.rm = TRUE)
}
}
}
data_timePlotFilled <- data_timePlot
data_timePlotFilled <- melt(data_imputedNA)
data_timePlotFilled <- data_timePlot[order(data_timePlotFilled$date),]
colnames(data_timePlotFilled) <- c("date", "interval", "steps")
data_timePlotFilled <- cbind(data_timePlotFilled$steps, data_timePlotFilled[1:2])
colnames(data_timePlotFilled) <- c("steps", "date", "interval")
View(data_timePlotFilled)
data_timePlotFilled <- data_timePlot
View(data_timePlotFilled)
data_timePlotFilled <- melt(data_imputedNA)
data_timePlotFilled <- data_timePlot[order(data_timePlotFilled$date),]
colnames(data_timePlotFilled) <- c("date", "interval", "steps")
View(data_timePlotFilled)
data_timePlotFilled <- melt(data_imputedNA)
data_imputedNA <- dcast(data, date ~ interval , value.var = "steps")
View(data_imputedNA)
for (column in c(2:ncol(data_imputedNA)))
{
for (row in c(1:nrow(data_imputedNA)))
{
if( is.na(data_imputedNA[row, column]) ) {
data_imputedNA[row, column] = lapply(data_imputedNA[column], mean, na.rm = TRUE)
}
}
}
data_timePlotFilled <- data_timePlot
data_timePlotFilled <- melt(data_imputedNA)
data_timePlotFilled <- data_timePlot[order(data_timePlotFilled$date),]
colnames(data_timePlotFilled) <- c("date", "interval", "steps")
data_timePlotFilled <- cbind(data_timePlotFilled$steps, data_timePlotFilled[1:2])
colnames(data_timePlotFilled) <- c("steps", "date", "interval")
View(data_timePlotFilled)
View(data_timePlotFilled)
data_timePlot <- dcast(data, date ~ interval , value.var = "steps")
data_timePlot <- lapply(data_timePlot[2:ncol(data_timePlot)], mean, na.rm=TRUE)
View(data_timePlot)
View(data_timePlot)
data_timePlot <- dcast(data, date ~ interval , value.var = "steps")
View(data_timePlot)
data_timePlot <- lapply(data_timePlot[2:ncol(data_timePlot)], mean, na.rm=TRUE)
View(data_timePlot)
data_timePlot <- data.frame(data_timePlot)
View(data_timePlot)
data_timePlot <- t(data_timePlot)
data_timePlot <- data.frame(cbind(unique(data$interval), data_timePlot))
colnames(data_timePlot) <- c("interval", "steps")
ggplot(data=data_timePlot, aes(x=interval, y=steps)) + geom_line()
data_imputedNA <- dcast(data, date ~ interval , value.var = "steps")
View(data_imputedNA)
for (column in c(2:ncol(data_imputedNA)))
{
for (row in c(1:nrow(data_imputedNA)))
{
if( is.na(data_imputedNA[row, column]) ) {
data_imputedNA[row, column] = lapply(data_imputedNA[column], mean, na.rm = TRUE)
}
}
}
View(data_imputedNA)
data_timePlotFilled <- melt(data_imputedNA)
View(data_timePlotFilled)
data_timePlotFilled <- data_timePlotFilled[order(data_timePlotFilled$date),]
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip", mode="wb")
unzip("activity.zip")
data <- read.csv("activity.csv", header = TRUE)
databydate <- data %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps)) %>%na.omit()
databydate <- data %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps)) %>% na.omit()
databydate <- data %>% select(date, steps)
library(dplyr)
library(reshape2)
library(ggplot2)
library(gridExtra)
databydate <- data %>% select(date, steps) %>% group_by(date) %>% summarize(tsteps= sum(steps)) %>% na.omit()
print(databydate)
mean(databydate$tsteps)
median(databydate$tsteps)
```r
median(databydate$tsteps)
```
```
## [1] 10765
```
